<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on R4All</title>
    <link>https://r4all.org/posts/</link>
    <description>Recent content in Posts on R4All</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://r4all.org/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How we teach ggplot (in the Insights book)</title>
      <link>https://r4all.org/posts/2020-12-16-how-we-teach-ggplot-in-insights/</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://r4all.org/posts/2020-12-16-how-we-teach-ggplot-in-insights/</guid>
      <description>In our book Insights we help readers learn how to use the amazing ggplot2 package to make visualisations. If you have some experience with ggplot2, you may think our method of teaching it, and of using it in the book are a bit odd. Here we explain our reason for teaching it the way we teach it.
For example, here is the code for the first graph we make:
bats_Age_Sex %&amp;gt;% ggplot() + geom_col(mapping = aes(x=Sex, y=num_bat_IDs, fill=Age))  And if we had not piped the dataset into ggplot then we would have done this:</description>
    </item>
    
    <item>
      <title>Diagnostic plots of linear models with categotical explanatory variables</title>
      <link>https://r4all.org/posts/diagnostic-plots-of-models-with-categotical-explanatory-variables/</link>
      <pubDate>Thu, 19 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://r4all.org/posts/diagnostic-plots-of-models-with-categotical-explanatory-variables/</guid>
      <description>[This is a minimal post due to very limited time.]
We need to check the assumptions of our linear model (e.g. regression, ANOVA, ANCOVA) are not too badly violated. We often use four diagnostic graphs to do so. One of these shows standardised residuals plotted against leverage (each observation has a value).
The take home message of this post is if your model contains at least one continuous explanatory variable, use the base R methods for making your diagnostic plots:</description>
    </item>
    
    <item>
      <title>Lurking variables and hidden relationships</title>
      <link>https://r4all.org/posts/lurking-variables-and-hidden-relationships/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://r4all.org/posts/lurking-variables-and-hidden-relationships/</guid>
      <description>Inspiration for the following from from Richard McElreath&amp;rsquo;s Statistical Rethinking book, and some of the code comes from here: https://bookdown.org/ajkurz/Statistical_Rethinking_recoded/multivariate-linear-models.html#masked-relationship
Let us think about the question of how the response variable y is related to two explanatory variables x1 and x2.
First we make a dataset in which we know the relationships because we specify them: we make y = x1 - x2. Before this, we create x1 and x2 and make them correlated&amp;hellip;</description>
    </item>
    
    <item>
      <title>Maximum likelihood part 1</title>
      <link>https://r4all.org/posts/maximum-likelihood-part-1/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://r4all.org/posts/maximum-likelihood-part-1/</guid>
      <description>This is the first in a series of posts about maximum likelihood methods for fitting statistical models to data. Inspiration for the material comes in large part from Drew Purves who presented something similar. Owen is using Drew’s approach as the basis for this course. Much of the R specific stuff is heavily influenced by Ben Bolker’s excellent book: Ecological Models and Data in R. The goal of this and the following posts includes: learning how to fit to our data more mechanistic models of arbitrary complexity.</description>
    </item>
    
    <item>
      <title>Why adjust your r-squared</title>
      <link>https://r4all.org/posts/why-adjust-your-r-squared/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://r4all.org/posts/why-adjust-your-r-squared/</guid>
      <description>Just a little demo of what happens if you don’t or do adjust your r-squared. Here’s the bottom line&amp;hellip;
As we increase the number of explanatory variables in a linear model (e.g. multiple regression) the unadjusted r-squared increaes (green dots) even if the additional explanatory variables contain only random numbers. The adjusted r-squared is &amp;ldquo;adjusted&amp;rdquo; so it does not! So if we simply want to know the proportion of variance explained by our model we are fine using the unadjusted r-squared.</description>
    </item>
    
    <item>
      <title>Getting lost packages</title>
      <link>https://r4all.org/posts/getting-lost-packages/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://r4all.org/posts/getting-lost-packages/</guid>
      <description>To use the functions in an add-on package you first need to install the package. Remember you only need install it once.
During the writing of the book, and in early 2018 the normal method for installing the ggfortify add-on package didn’t work (we got the message package ggfortify is not available (for R Version 3.2.4)).
This has not happened for some time, so hopefully you won&amp;rsquo;t experience it. If you do&amp;hellip;</description>
    </item>
    
    <item>
      <title>Importing data update</title>
      <link>https://r4all.org/posts/importing-data-update/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://r4all.org/posts/importing-data-update/</guid>
      <description>As the Second Edition of Getting Started with R was going to press, Rstudio changed the function it uses to import data in the Import Dataset tool, from the base function read.csv() to the read_csv() function in the readr package. Since then, the Import Dataset button gives a menu with an option to use either (&amp;ldquo;base&amp;rdquo; uses read.csv and &amp;ldquo;readr&amp;rdquo; uses read_csv) From the Rstudio Blog about the readr package:</description>
    </item>
    
  </channel>
</rss>